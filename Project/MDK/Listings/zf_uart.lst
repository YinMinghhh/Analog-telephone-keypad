C51 COMPILER V9.57.0.0   ZF_UART                                                           01/17/2023 13:14:25 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE ZF_UART
OBJECT MODULE PLACED IN .\Objects\zf_uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Libraries\seekfree_libraries\zf_uart.c OPTIMIZE(8,SPEED) BROWSE DE
                    -BUG OBJECTEXTEND PRINT(.\Listings\zf_uart.lst) TABS(2) OBJECT(.\Objects\zf_uart.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          uart
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ790875685)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Target core   STC8G2K64S4
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2020-4-14
  18           *********************************************************************************************************
             -***********/
  19          
  20          #include "zf_uart.h"
*** WARNING C318 IN LINE 24 OF ..\..\Libraries\seekfree_libraries\zf_uart.h: can't open file 'common.h'
*** WARNING C318 IN LINE 22 OF ..\..\Libraries\seekfree_libraries\zf_tim.h: can't open file 'common.h'
*** ERROR C129 IN LINE 53 OF ..\..\Libraries\seekfree_libraries\zf_tim.h: missing ';' before 'ctimer_count_read'
  21          #include "board.h"
*** WARNING C318 IN LINE 21 OF ..\..\Libraries\seekfree_libraries\zf_uart.c: can't open file 'board.h'
  22          
  23          uint8 busy[5];         //接收忙标志位
  24          
  25          uint8 xdata uart1_tx_buff[UART1_TX_BUFFER_SIZE];  //发送缓冲
  26          uint8 xdata uart1_rx_buff[UART1_RX_BUFFER_SIZE];  //接收缓冲
  27          
  28          
  29          //--------------------------------------------------------------------------------------------------------
             ------------
  30          //  @brief      串口初始化
  31          //  @param      uart_n          串口模块号(USART_1,USART_2,USART_3,USART_4)
  32          //  @param      uart_rx_pin     串口波特率
  33          //  @param      uart_tx_pin     串口接收发送引脚
  34          //  @param      baud          串口接收发送引脚
  35          //  @param      tim_n         使用tim_n作为串口波特率发生器(TIM1-TIM4)
  36          //  @return     NULL            
  37          //  Sample usage:               uart_init(USART_1,115200,UART1_RX_P30_TX_P31);       // 初始化串口1 波特率
             -115200 发送引脚使用P31 接收引脚使用P30
  38          //  @note                       串口1使用 定时器1或者定时器2 作为波特率发生器。
  39          //                串口2使用 定时器2        作为波特率发生器。
  40          //                串口3使用 定时器3或者定时器2 作为波特率发生器。
  41          //                串口4使用 定时器4或者定时器2 作为波特率发生器。
  42          //                              STC8G仅有 定时器0-定时器4，这5个定时器。
  43          //                编码器采集数据也需要定时器作为外部计数。
  44          //--------------------------------------------------------------------------------------------------------
             ------------
  45          void uart_init(UARTN_enum uart_n, UARTPIN_enum uart_rx_pin, UARTPIN_enum uart_tx_pin, uint32 baud, TIMN_en
C51 COMPILER V9.57.0.0   ZF_UART                                                           01/17/2023 13:14:25 PAGE 2   

             -um tim_n)
  46          {
  47              uint16 brt;
  48              //65536-SYSclk/baud/4=brt
  49              brt = 65536 - sys_clk/baud/4;
  50          
  51            switch(uart_n)
  52            {
  53              case UART_1:
  54              {
  55                if(TIM_1 == tim_n)
  56                {
  57                  SCON |= 0x50;
  58                  TMOD |= 0x00;
  59                  TL1 = brt;
  60                  TH1 = brt >> 8;
  61                  AUXR |= 0x40;
  62                  TR1 = 1;
  63                  busy[1] = 0;
  64                }
  65                else if(TIM_2 == tim_n)
  66                {
  67                  SCON |= 0x50;
  68                  T2L = brt;
  69                  T2H = brt >> 8;
  70                  AUXR |= 0x15;
  71                }
  72                P_SW1 &= ~(0x03<<6);
  73                if((UART1_RX_P30 == uart_rx_pin) && (UART1_TX_P31 == uart_tx_pin))
  74                {
  75                  P_SW1 |= 0x00;
  76                }
  77                else if((UART1_RX_P36 == uart_rx_pin) && (UART1_TX_P37 == uart_tx_pin))
  78                {
  79                  P_SW1 |= 0x40;
  80                }
  81                else if((UART1_RX_P16 == uart_rx_pin) && (UART1_TX_P17 == uart_tx_pin))
  82                {
  83                  P_SW1 |= 0x80;
  84                }
  85                else if((UART1_RX_P43 == uart_rx_pin) && (UART1_TX_P44 == uart_tx_pin))
  86                {
  87                  P_SW1 |= 0xc0;
  88                }
  89                busy[1] = 0;
  90                ES = 1;
  91                break;
  92              }
  93              
  94              case UART_2:
  95              {
  96                if(TIM_2 == tim_n)
  97                {
  98                  S2CON |= 0x10;
  99                  T2L = brt;
 100                  T2H = brt >> 8;
 101                  AUXR |= 0x14;
 102                }
 103                
 104                P_SW2 &= ~(0x01<<0);
 105                if((UART2_RX_P10 == uart_rx_pin) && (UART2_TX_P11 == uart_tx_pin))
 106                {
C51 COMPILER V9.57.0.0   ZF_UART                                                           01/17/2023 13:14:25 PAGE 3   

 107                  P_SW2 |= 0x00;
 108                }
 109                else if((UART2_RX_P46 == uart_rx_pin) && (UART2_TX_P47 == uart_tx_pin))
 110                {
 111                  P_SW2 |= 0x01;
 112                }
 113                
 114                IE2 |= 0x01 << 0; //允许串行口2中断
 115                busy[2] = 0;
 116                break;
 117              }
 118              
 119              case UART_3:
 120              {
 121                if(TIM_2 == tim_n)
 122                {
 123                  S3CON |= 0x10;
 124                  T2L = brt;
 125                  T2H = brt >> 8;
 126                  AUXR |= 0x14;
 127                }
 128                else if(TIM_3 == tim_n)
 129                {
 130                  S3CON |= 0x50;
 131                  T3L = brt;
 132                  T3H = brt >> 8;
 133                  T4T3M |= 0x0a;
 134                }
 135                
 136                P_SW2 &= ~(0x01<<1);
 137                if((UART3_RX_P00 == uart_rx_pin) && (UART3_TX_P01 == uart_tx_pin))
 138                {
 139                  P_SW2 |= 0x00;
 140                }
 141                else if((UART3_RX_P50 == uart_rx_pin) && (UART3_TX_P51 == uart_tx_pin))
 142                {
 143                  P_SW2 |= 0x02;
 144                }
 145                
 146                IE2 |= 0x01<<3; //允许串行口3中断
 147                busy[3] = 0;
 148                break;
 149              }
 150              
 151              case UART_4:
 152              {
 153                if(TIM_2 == tim_n)
 154                {
 155                  S4CON |= 0x10;
 156                  T2L = brt;
 157                  T2H = brt >> 8;
 158                  AUXR |= 0x14;
 159                }
 160                else if(TIM_4 == tim_n)
 161                {
 162                  S4CON |= 0x50;
 163                  T4L = brt;
 164                  T4H = brt >> 8;
 165                  T4T3M |= 0xa0;
 166                }
 167          
 168                P_SW2 &= ~(0x01<<2);
C51 COMPILER V9.57.0.0   ZF_UART                                                           01/17/2023 13:14:25 PAGE 4   

 169                if((UART4_RX_P02 == uart_rx_pin) && (UART4_TX_P03 == uart_tx_pin))
 170                {
 171                  P_SW2 |= 0x00;
 172                }
 173                else if((UART4_RX_P52 == uart_rx_pin) && (UART4_TX_P53 == uart_tx_pin))
 174                {
 175                  P5M0 = 0x00;
 176                  P5M1 = 0x01<<2;//P5.2 需要设置为高阻
 177                  P_SW2 |= 0x04;
 178                }
 179                IE2 |= 0x01<<4; //允许串行口4中断
 180                busy[4] = 0;
 181                break;
 182              } 
 183            }
 184          }
 185          
 186          
 187          //--------------------------------------------------------------------------------------------------------
             ------------
 188          //  @brief      串口字节输出
 189          //  @param      uart_n          串口模块号(USART_1,USART_2,USART_3,USART_4)
 190          //  @param      dat             需要发送的字节
 191          //  @return     void        
 192          //  Sample usage:               uart_putchar(UART_1,0xA5);       // 串口1发送0xA5
 193          //--------------------------------------------------------------------------------------------------------
             ------------
 194          void uart_putchar(UARTN_enum uart_n,uint8 dat)
 195          {
 196            switch(uart_n)
 197            {
 198              case UART_1:
 199                while (busy[1]);
 200                busy[1] = 1;
 201                SBUF = dat;
 202                  break;
 203              case UART_2:
 204                while (busy[2]);
 205                busy[2] = 1;
 206                S2BUF = dat;
 207                  break;
 208              case UART_3:
 209                while (busy[3]);
 210                busy[3] = 1;
 211                S3BUF = dat;
 212                  break;
 213              case UART_4:
 214                while (busy[4]);
 215                busy[4] = 1;
 216                S4BUF = dat;
 217                  break;
 218            }
 219          }
 220          
 221          
 222          //--------------------------------------------------------------------------------------------------------
             ------------
 223          //  @brief      串口发送数组
 224          //  @param      uart_n          串口模块号(USART_1,USART_2,USART_3,USART_4)
 225          //  @param      *buff           要发送的数组地址
 226          //  @param      len             发送长度
 227          //  @return     void
C51 COMPILER V9.57.0.0   ZF_UART                                                           01/17/2023 13:14:25 PAGE 5   

 228          //  Sample usage:               uart_putbuff(UART_1,&a[0],5);
 229          //--------------------------------------------------------------------------------------------------------
             ------------
 230          void uart_putbuff(UARTN_enum uart_n,uint8 *p,uint16 len)
 231          {
 232              while(len--)
 233                  uart_putchar(uart_n,*p++);
 234          }
 235          
 236          
 237          //--------------------------------------------------------------------------------------------------------
             ------------
 238          //  @brief      串口发送字符串
 239          //  @param      uart_n          串口模块号(USART_1,USART_2,USART_3,USART_4)
 240          //  @param      *str            要发送的字符串地址
 241          //  @return     void
 242          //  Sample usage:               uart_putstr(UART_1,"i lvoe you"); 
 243          //--------------------------------------------------------------------------------------------------------
             ------------
 244          void uart_putstr(UARTN_enum uart_n,uint8 *str,uint16 len)
 245          {
 246              while(len--)
 247                  uart_putchar(uart_n,*str++);
 248          }

C51 COMPILATION COMPLETE.  3 WARNING(S),  1 ERROR(S)
