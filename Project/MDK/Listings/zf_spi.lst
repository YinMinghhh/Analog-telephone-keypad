C51 COMPILER V9.57.0.0   ZF_SPI                                                            01/17/2023 13:14:25 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE ZF_SPI
OBJECT MODULE PLACED IN .\Objects\zf_spi.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Libraries\seekfree_libraries\zf_spi.c OPTIMIZE(8,SPEED) BROWSE DEB
                    -UG OBJECTEXTEND PRINT(.\Listings\zf_spi.lst) TABS(2) OBJECT(.\Objects\zf_spi.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          spi
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ790875685)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Target core   STC8G2K64S4
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2020-4-14
  18           *********************************************************************************************************
             -***********/
  19          
  20          #include "zf_gpio.h"
*** WARNING C318 IN LINE 24 OF ..\..\Libraries\seekfree_libraries\zf_gpio.h: can't open file 'common.h'
  21          #include "zf_spi.h"
*** WARNING C318 IN LINE 22 OF ..\..\Libraries\seekfree_libraries\zf_spi.h: can't open file 'common.h'
*** ERROR C141 IN LINE 73 OF ..\..\Libraries\seekfree_libraries\zf_spi.h: syntax error near 'mode', expected ')'
*** ERROR C141 IN LINE 82 OF ..\..\Libraries\seekfree_libraries\zf_spi.h: syntax error near 'mode', expected ')'
*** ERROR C129 IN LINE 84 OF ..\..\Libraries\seekfree_libraries\zf_spi.h: missing ';' before 'spi_mosi'
  22          
  23          //--------------------------------------------------------------------------------------------------------
             ------------
  24          //  @brief      spi初始化函数(ss引脚由软件控制)
  25          //  @param      spi_n     选择SPI模块(SPI_1-SPI_4)
  26          //  @param      sck_pin     选择SCK引脚
  27          //  @param      mosi_pin    选择MOSI引脚
  28          //  @param      miso_pin    选择MISO引脚
  29          //  @param      mstr      主从选择
  30          //  @param      mode            SPI模式 0：CPOL=0 CPHA=0    1：CPOL=0 CPHA=1   2：CPOL=1 CPHA=0   3：CPOL=
             -1 CPHA=1 //具体细节可自行百度
  31          //  @param      baud      速率选择
  32          //  @since      v1.0
  33          //  Sample usage:       spi_init(SPI_1, SPI1_SCLK_P15, SPI1_MOSI_P13, SPI1_MISO_P14, 0, MASTER, SYSclk_DIV_4)
             -;  
  34          //                //初始化SPI1,主机模式,速率为系统频率/4，SCLK引脚P1.5 MOSI引脚P1.3 MISO引脚P1.4，SPI模式0
  35          //--------------------------------------------------------------------------------------------------------
             ------------
  36          void spi_init(SPIN_enum spi_n,
  37                  SPI_PIN_enum sck_pin, 
  38                  SPI_PIN_enum mosi_pin, 
  39                  SPI_PIN_enum miso_pin, 
  40                  uint8 mode,
  41                  SPI_MSTR_enum mstr,
  42                  SPI_BAUD_enum baud)
  43          {
C51 COMPILER V9.57.0.0   ZF_SPI                                                            01/17/2023 13:14:25 PAGE 2   

  44          
  45            sck_pin = sck_pin;
  46            mosi_pin = mosi_pin;
  47            miso_pin = miso_pin;
  48            
  49          
  50            
  51          switch(spi_n)
  52              {
  53              //IO口需要配置为：准双向口（传统8051端口模式，弱上拉）
  54              case SPI_1:
  55                gpio_mode(P1_3,GPIO);
  56                gpio_mode(P1_4,GPIO);
  57                gpio_mode(P1_5,GPIO);
  58                gpio_pull_set(P1_3,PULLUP);
  59                gpio_pull_set(P1_4,NOPULL);
  60                gpio_pull_set(P1_5,PULLUP);
  61                break;
  62              case SPI_2:
  63                gpio_mode(P2_3,GPIO);
  64                gpio_mode(P2_4,GPIO);
  65                gpio_mode(P2_5,GPIO);
  66                gpio_pull_set(P2_3,PULLUP);
  67                gpio_pull_set(P2_4,NOPULL);
  68                gpio_pull_set(P2_5,PULLUP);
  69                break;
  70              case SPI_3:
  71                gpio_mode(P4_0,GPIO);
  72                gpio_mode(P4_1,GPIO);
  73                gpio_mode(P4_3,GPIO);
  74                gpio_pull_set(P4_0,PULLUP);
  75                gpio_pull_set(P4_1,NOPULL);
  76                gpio_pull_set(P4_3,PULLUP);
  77                break;
  78              case SPI_4:
  79                gpio_mode(P3_4,GPIO);
  80                gpio_mode(P3_3,GPIO);
  81                gpio_mode(P3_2,GPIO);
  82                gpio_pull_set(P3_4,PULLUP);
  83                gpio_pull_set(P3_3,NOPULL);
  84                gpio_pull_set(P3_2,PULLUP);
  85                break;
  86              }
  87            
  88            P_SW1 &= ~(0x03<<2);  //清除SPI功能脚选择位
  89              switch(spi_n)
  90              {
  91              case SPI_1:
  92                  P_SW1 |= (0x00<<2);
  93                  break;
  94              case SPI_2:
  95                  P_SW1 |= (0x01<<2);
  96                  break;
  97              case SPI_3:
  98                  P_SW1 |= (0x02<<2);
  99                  break;
 100              case SPI_4:
 101                  P_SW1 |= (0x03<<2);
 102                  break;
 103              }
 104            
 105            SPCTL &= 0xF3;    //清除SPI极性和相位
C51 COMPILER V9.57.0.0   ZF_SPI                                                            01/17/2023 13:14:25 PAGE 3   

 106            switch(mode)
 107            {
 108            case 0:
 109              
 110              break;
 111            case 1:
 112              SPCTL |= 0x01<<2;
 113              break;
 114            case 2:
 115              SPCTL |= 0x02<<2;
 116              break;
 117            case 3:
 118              SPCTL |= 0x03<<2;
 119              break;
 120            }
 121              
 122            
 123            SPCTL |= baud;    //速率设定
 124          
 125              if(mstr == MASTER)
 126              {
 127                  SPCTL |= 1<<7;  //忽略SS引脚功能，使用MSTR确定器件是主机还是从机
 128                  SPCTL |= 1<<4;  //主机模式
 129              }
 130              else
 131              {
 132                  //不做操作
 133              }
 134              SPCTL |= 1<<6;    //使能SPI功能
 135          }
 136          
 137          
 138          
 139          //--------------------------------------------------------------------------------------------------------
             ------------
 140          //  @brief      SPI发送接收函数
 141          //  @param      dat           发送的数据
 142          //  @since      v1.0
 143          //  Sample usage:       buf_1 = spi_mosi(buf);    //发送buf的内容，并接收到buf_1里，长度为1字节
 144          //--------------------------------------------------------------------------------------------------------
             ------------
 145          uint8 spi_mosi(uint8 dat)
 146          {
 147              SPDAT = dat;          //DATA寄存器赋值
 148              while (!(SPSTAT & 0x80));     //查询完成标志
 149              SPSTAT = 0xc0;                  //清中断标志
 150            return SPDAT;
 151          }
 152          
 153          
 154          //--------------------------------------------------------------------------------------------------------
             ------------
 155          //  @brief      spi引脚切换函数(ss引脚由软件控制)
 156          //  @param      spi_n     选择SPI模块(SPI_1-SPI_4)
 157          //  @param      sck_pin     选择SCK引脚
 158          //  @param      mosi_pin    选择MOSI引脚
 159          //  @param      miso_pin    选择MISO引脚
 160          //  Sample usage:       spi_change_pin(SPI_1,SPI1_SCLK_P15, SPI1_MOSI_P13,SPI1_MISO_P14); 
 161          //                //切换SPI引脚
 162          //--------------------------------------------------------------------------------------------------------
             ------------
 163          void spi_change_pin(SPIN_enum spi_n, SPI_PIN_enum sck_pin, SPI_PIN_enum mosi_pin, SPI_PIN_enum miso_pin)
C51 COMPILER V9.57.0.0   ZF_SPI                                                            01/17/2023 13:14:25 PAGE 4   

 164          {
 165            sck_pin = sck_pin;
 166            mosi_pin = mosi_pin;
 167            miso_pin = miso_pin;
 168            
 169              P_SW1 &= ~(0x03<<2);  //清除SPI功能脚选择位
 170            switch(spi_n)
 171              {
 172              //IO口需要配置为：准双向口（传统8051端口模式，弱上拉）
 173              case SPI_1:
 174                gpio_mode(P1_3,GPIO);
 175                gpio_mode(P1_4,GPIO);
 176                gpio_mode(P1_5,GPIO);
 177                gpio_pull_set(P1_3,PULLUP);
 178                gpio_pull_set(P1_4,NOPULL);
 179                gpio_pull_set(P1_5,PULLUP);
 180                break;
 181              case SPI_2:
 182                gpio_mode(P2_3,GPIO);
 183                gpio_mode(P2_4,GPIO);
 184                gpio_mode(P2_5,GPIO);
 185                gpio_pull_set(P2_3,PULLUP);
 186                gpio_pull_set(P2_4,NOPULL);
 187                gpio_pull_set(P2_5,PULLUP);
 188                break;
 189              case SPI_3:
 190                gpio_mode(P4_0,GPIO);
 191                gpio_mode(P4_1,GPIO);
 192                gpio_mode(P4_3,GPIO);
 193                gpio_pull_set(P4_0,PULLUP);
 194                gpio_pull_set(P4_1,NOPULL);
 195                gpio_pull_set(P4_3,PULLUP);
 196                break;
 197              case SPI_4:
 198                gpio_mode(P3_4,GPIO);
 199                gpio_mode(P3_3,GPIO);
 200                gpio_mode(P3_2,GPIO);
 201                gpio_pull_set(P3_4,PULLUP);
 202                gpio_pull_set(P3_3,NOPULL);
 203                gpio_pull_set(P3_2,PULLUP);
 204                break;
 205              }
 206          
 207              switch(spi_n)
 208              {
 209              case SPI_1:
 210                  P_SW1 |= (0x00<<2);
 211                  break;
 212              case SPI_2:
 213                  P_SW1 |= (0x01<<2);
 214                  break;
 215              case SPI_3:
 216                  P_SW1 |= (0x02<<2);
 217                  break;
 218              case SPI_4:
 219                  P_SW1 |= (0x03<<2);
 220                  break;
 221              }
 222          }
 223          
 224          
 225          
C51 COMPILER V9.57.0.0   ZF_SPI                                                            01/17/2023 13:14:25 PAGE 5   

 226          //--------------------------------------------------------------------------------------------------------
             ------------
 227          //  @brief      spi模式切换函数
 228          //  @param      mode            SPI模式 0：CPOL=0 CPHA=0    1：CPOL=0 CPHA=1   2：CPOL=1 CPHA=0   3：CPOL=
             -1 CPHA=1 //具体细节可自行百度
 229          //  Sample usage:       
 230          //--------------------------------------------------------------------------------------------------------
             ------------
 231          void spi_change_mode(uint8 mode)
 232          {
 233            SPCTL &= 0xF7;    //清除SPI极性和相位
 234            switch(mode)
 235            {
 236            case 0:
 237              
 238              break;
 239            case 1:
 240              SPCTL |= 0x01<<2;
 241              break;
 242            case 2:
 243              SPCTL |= 0x02<<2;
 244              break;
 245            case 3:
 246              SPCTL |= 0x03<<2;
 247              break;
 248            }
 249          }
 250          
 251          

C51 COMPILATION COMPLETE.  2 WARNING(S),  3 ERROR(S)
