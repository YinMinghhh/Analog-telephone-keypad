C51 COMPILER V9.57.0.0   ZF_PCA_PIT                                                        01/17/2023 13:14:24 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE ZF_PCA_PIT
OBJECT MODULE PLACED IN .\Objects\zf_pca_pit.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Libraries\seekfree_libraries\zf_pca_pit.c OPTIMIZE(8,SPEED) BROWSE
                    - DEBUG OBJECTEXTEND PRINT(.\Listings\zf_pca_pit.lst) TABS(2) OBJECT(.\Objects\zf_pca_pit.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          pit
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ790875685)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Target core   STC8G2K64S4
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2020-4-14
  18           *********************************************************************************************************
             -***********/
  19          
  20          #include "zf_pca_pit.h"
*** WARNING C318 IN LINE 22 OF ..\..\Libraries\seekfree_libraries\zf_pca_pit.h: can't open file 'common.h'
*** ERROR C129 IN LINE 62 OF ..\..\Libraries\seekfree_libraries\zf_pca_pit.h: missing ';' before 'ccp_value'
  21          #include "board.h"
*** WARNING C318 IN LINE 21 OF ..\..\Libraries\seekfree_libraries\zf_pca_pit.c: can't open file 'board.h'
  22          
  23          
  24          
  25          uint16 ccp_value[3] = {0,0,0};
  26          uint16 pca_time_ms[3] = {0,0,0};
  27          
  28          
  29          //--------------------------------------------------------------------------------------------------------
             ------------
  30          //  @brief      内部使用用户无需关心
  31          //  @param      NULL              
  32          //  @return     void
  33          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
  34          //--------------------------------------------------------------------------------------------------------
             ------------
  35          void pca_init(PCAN_enum pca_n,PCAMODE_enum pca_mode)
  36          {
  37            //P_SW1 = 0x00; //ECI/P1.2, CCP0/P1.1, CCP1/P1.0, CCP2/P3.7
  38            //P_SW1 = 0x10; //ECI_2/P3.4, CCP0_2/P3.5, CCP1_2/P3.6, CCP2_2/P3.7
  39            //P_SW1 = 0x20; //ECI_3/P2.4, CCP0_3/P2.5, CCP1_3/P2.6, CCP2_3/P2.7
  40          
  41            CCON = 0;
  42            CMOD = 0x03<<1; //ECI 脚的外部输入时钟
  43            
  44            if(PCA_1 == pca_n)
  45            {
  46              switch(pca_mode)
  47              {
C51 COMPILER V9.57.0.0   ZF_PCA_PIT                                                        01/17/2023 13:14:24 PAGE 2   

  48                case NONE:
  49                {
  50                  CCAPM0 = 0x00;
  51                  break;
  52                }
  53                case PWM_MODE_N0_ISR:
  54                {
  55                  CCAPM0 = 0x42;
  56                  break;
  57                }
  58                case PWM_MODE_RISING_EDGE_ISR:
  59                {
  60                  CCAPM0 = 0x63;
  61                  break;
  62                }
  63                case PWM_MODE_FALLING_EDGE_ISR:
  64                {
  65                  CCAPM0 = 0x53;
  66                  break;
  67                }
  68                
  69                case PWM_MODE_BOTH_EDGE_ISR:
  70                {
  71                  CCAPM0 = 0x73;
  72                  break;
  73                }
  74                case RISING_EDGE_CAPTURE:
  75                {
  76                  CCAPM0 = 0x20;
  77                  break;
  78                }
  79                case FALLING_EDGE_CAPTURE:
  80                {
  81                  CCAPM0 = 0x10;
  82                  break;
  83                }
  84                case BOTH_EDGE_CAPTURE:
  85                {
  86                  CCAPM0 = 0x30;
  87                  break;
  88                }
  89                case SOFT_TIMER:
  90                {
  91                  CCAPM0 = 0x49;
  92                  CR = 1;
  93                  break;
  94                }   
  95                case HIGH_SPEED_PULSE_OUTPUT:
  96                {
  97                  CCAPM0 = 0x4C;
  98                  break;
  99                }
 100              }
 101            }
 102          }
 103          
 104          //--------------------------------------------------------------------------------------------------------
             ------------
 105          //  @brief      内部使用用户无需关心
 106          //  @param      NULL              
 107          //  @return     void
 108          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
C51 COMPILER V9.57.0.0   ZF_PCA_PIT                                                        01/17/2023 13:14:24 PAGE 3   

 109          //--------------------------------------------------------------------------------------------------------
             ------------
 110          uint16 pca_get(PCAN_enum pca_n)
 111          {
 112            uint16 dat;
 113            if(PCA_1 == pca_n)
 114            {
 115              dat = (uint8)CCAP0H << 8;
 116              dat = ((uint8)CCAP0L) | dat;
 117            }
 118            
 119            return dat;
 120          }
 121          //--------------------------------------------------------------------------------------------------------
             ------------
 122          //  @brief      内部使用用户无需关心
 123          //  @param      NULL              
 124          //  @return     void
 125          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
 126          //--------------------------------------------------------------------------------------------------------
             ------------
 127          void pca_clean(PCAN_enum pca_n)
 128          {
 129            if(PCA_1 == pca_n)
 130            {
 131              CH = 0;
 132              CL = 0;
 133            }
 134          }
 135          
 136          
 137          
 138          
 139          
 140          //--------------------------------------------------------------------------------------------------------
             ------------
 141          //  @brief      周期中断初始化
 142          //  @param      time        周期中断时间(最小1ms，最大看note)
 143          //  @return     void
 144          //  Sample usage:     pca_init_interrupt_ms(PCA_0,1); 初始化1ms一次中断
 145          //  note:         
 146          //              周期中断的最大值跟系统频率有关系，
 147          //              例如27Mhz的系统频率，周期中断的time_ms最大为29ms。
 148          //--------------------------------------------------------------------------------------------------------
             ------------
 149          void pca_init_interrupt_ms(PCAN_enum pca_n,uint16 time_ms)
 150          {
 151            uint16 cr_count;
 152            CR = 0;       // 关闭 PCA 计时器
 153            cr_count = (CH<<8) | CL;
 154            if(PCA_0 == pca_n)
 155            {
 156              time_ms = (float)(sys_clk / (12 * (1000 / (float)time_ms)));
 157              pca_time_ms[0] = time_ms;
 158              CCAPM0 = 0x49;
 159              CCAP0L = CL + 1;
 160              CCAP0H = CH;
 161              ccp_value[0] = ccp_value[0] + pca_time_ms[0] + cr_count;
 162            }
 163            if(PCA_1 == pca_n)
 164            {
 165              time_ms = (float)(sys_clk / (12 * (1000 / (float)time_ms)));
C51 COMPILER V9.57.0.0   ZF_PCA_PIT                                                        01/17/2023 13:14:24 PAGE 4   

 166              pca_time_ms[1] = time_ms;
 167              CCAPM1 = 0x49;
 168              CCAP0L = CL + 1;
 169              CCAP0H = CH;
 170              ccp_value[1] = ccp_value[1] + pca_time_ms[1] + cr_count;
 171            }
 172          //  PCA_2已做延时
 173          //  if(PCA_2 == pca_n)  
 174          //  {
 175          //    time_ms = (sys_clk/(12*(1000/time_ms)));
 176          //    pca_time_ms[2] = time_ms;
 177          //    CCAPM2 = 0x49;
 178          //    CCAP2L = ccp_value[2];
 179          //    CCAP2H = ccp_value[2] >> 8;
 180          //    ccp_value[2] += pca_time_ms[2];
 181          //  }
 182            CR = 1;       // 启动 PCA 计时器
 183          }
 184          
 185          //--------------------------------------------------------------------------------------------------------
             ------------
 186          //  @brief      PCA重载计数器
 187          //  @param      pca_n       pca通道号
 188          //  @return     void
 189          //  Sample usage:         pca_init_interrupt_ms(PCA_0, 1); 初始化1ms一次中断
 190          //--------------------------------------------------------------------------------------------------------
             ------------
 191          void pca_reload_counter(PCAN_enum pca_n)
 192          {
 193            
 194            if(PCA_0 == pca_n)
 195            {
 196              //重载计数器
 197              CCAP0L = ccp_value[0];
 198              CCAP0H = ccp_value[0] >> 8;
 199              ccp_value[0] += pca_time_ms[0];
 200            }
 201          
 202            if(PCA_1 == pca_n)
 203            {
 204              //重载计数器
 205              CCAP1L = ccp_value[1];
 206              CCAP1H = ccp_value[1] >> 8;
 207              ccp_value[1] += pca_time_ms[1];
 208            }
 209            
 210            
 211            if(PCA_2 == pca_n)
 212            {
 213              //重载计数器
 214              CCAP2L = ccp_value[2];
 215              CCAP2H = ccp_value[2] >> 8;
 216              ccp_value[2] += pca_time_ms[2];
 217            }
 218          
 219          }
 220          

C51 COMPILATION COMPLETE.  2 WARNING(S),  1 ERROR(S)
